// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rectangles.DataAccess.Data;

#nullable disable

namespace Rectangles.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rectangles.Models.ColorBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorBodyValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ColorBodies");
                });

            modelBuilder.Entity("Rectangles.Models.ColorLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorLineValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ColorLines");
                });

            modelBuilder.Entity("Rectangles.Models.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("XValue")
                        .HasColumnType("float");

                    b.Property<double>("YValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("Rectangles.Models.Rectangle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BotLeftId")
                        .HasColumnType("int");

                    b.Property<int>("ColorBodyRectangleId")
                        .HasColumnType("int");

                    b.Property<int>("ColorLineRectangleId")
                        .HasColumnType("int");

                    b.Property<string>("NameRectangle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberRectangle")
                        .HasColumnType("int");

                    b.Property<int>("TopRightId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BotLeftId");

                    b.HasIndex("ColorBodyRectangleId");

                    b.HasIndex("ColorLineRectangleId");

                    b.HasIndex("TopRightId");

                    b.ToTable("Rectangles");
                });

            modelBuilder.Entity("Rectangles.Models.Rectangle", b =>
                {
                    b.HasOne("Rectangles.Models.Point", "BotLeftPoint")
                        .WithMany()
                        .HasForeignKey("BotLeftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rectangles.Models.ColorBody", "ColorBodyRectangle")
                        .WithMany()
                        .HasForeignKey("ColorBodyRectangleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rectangles.Models.ColorLine", "ColorLineRectangle")
                        .WithMany()
                        .HasForeignKey("ColorLineRectangleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rectangles.Models.Point", "TopRightPoint")
                        .WithMany()
                        .HasForeignKey("TopRightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BotLeftPoint");

                    b.Navigation("ColorBodyRectangle");

                    b.Navigation("ColorLineRectangle");

                    b.Navigation("TopRightPoint");
                });
#pragma warning restore 612, 618
        }
    }
}
